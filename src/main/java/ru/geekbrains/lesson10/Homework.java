package ru.geekbrains.lesson10;


// 1. Создать массив с набором слов (10-20 слов, должны встречаться повторяющиеся).
// Найти и вывести список уникальных слов, из которых состоит массив (дубликаты не считаем).
// Посчитать, сколько раз встречается каждое слово.
// 2. Написать простой класс Телефонный Справочник, который хранит в себе список фамилий и
// телефонных номеров. В этот телефонный справочник с помощью метода add() можно добавлять записи,
// а с помощью метода get() искать номер телефона по фамилии.
// Следует учесть, что под одной фамилией может быть несколько телефонов (в случае однофамильцев),
// тогда при запросе такой фамилии должны выводиться все телефоны.
// Желательно не добавлять лишний функционал (дополнительные поля (имя, отчество, адрес), взаимодействие с пользователем через консоль и т.д).
// Консоль использовать только для вывода результатов проверки телефонного справочника.

import java.util.Locale;
import java.util.Map;
import java.util.TreeMap;

public class Homework {

    public static void main(String[] args) {
        calcWordCount();
        testPhoneBook();
    }


    private static void calcWordCount() {
        String text = """
                В  середине  лета  цветок  распустил
                венчик сверху. До этого он был похож на
                травку, а теперь стал настоящим цветком.
                Венчик у него был составлен из лепестков
                простого  светлого  цвета,  ясного  и
                сильного,  как  у  звезды.  И  как  звезда,  он
                светился живым мерцающим огнём, и его
                видно было даже в тёмную ночь. А когда ветер приходил
                на пустырь, он всегда касался цветка и уносил
                его запах с собою.""";

        // разбиваем текст на отдельные слова
        String[] words = text
                .toLowerCase(Locale.ROOT)
                .split("[\n\s,.]+");

        // добавляем слова в словарь и считаем сколько раз встречается каждое слово
        Map<String, Integer> wordCounterMap = new TreeMap<>(); // сортируем слова по алфавиту
        for (String word : words) {
            wordCounterMap.compute(word, (k, v) -> (v == null) ? 1 : v + 1);
        }

        // печатаем уникальные слова и их количество
        wordCounterMap.forEach((k, v) -> System.out.println(k + ": " + v));
    }

    private static void testPhoneBook() {
        PhoneBook phoneBook = new PhoneBook();
        phoneBook.add("Иванов", "89111111111");
        phoneBook.add("Иванов", "89111111111");
        phoneBook.add("Петров", "89222222222");
        phoneBook.add("Сидоров", "89333333333");
        phoneBook.add("Сидоров", "89555555555");

        System.out.println("Иванов: " + phoneBook.get("Иванов"));
        System.out.println("Петров: " + phoneBook.get("Петров"));
        System.out.println("Сидоров: " + phoneBook.get("Сидоров"));
        System.out.println("Кузнецов: " + phoneBook.get("Кузнецов"));
    }
}
